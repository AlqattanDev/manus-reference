---
/**
 * Skills Component - Refactored
 * Now uses utility functions and proper type definitions
 */
import type { SkillsProps, SkillLevel } from '@/types/skill.js';
import {
  generateSkillBarConfig,
  isValidSkillLevel,
} from '@/utils/helpers/skillBarGenerator.js';

const {
  skills,
  variant = 'grid',
  showProgressBars = true,
  interactive = true,
  className = '',
  ...props
} = Astro.props as SkillsProps;

// Enhanced skill bar generation with validation
const getSkillBarStyle = (level: string) => {
  if (!isValidSkillLevel(level)) {
    console.warn(`Invalid skill level: ${level}, defaulting to Beginner`);
    return generateSkillBarConfig('Beginner');
  }
  return generateSkillBarConfig(level as SkillLevel);
};
---

<div class={`skills-container skills-${variant} ${className}`} {...props}>
  <div class="skills-header">
    <span class="command-prompt">$ cat ~/.skills</span>
  </div>

  {
    skills && skills.length > 0 ? (
      <div class="skills-grid">
        {skills.map((category) => (
          <div class="category-section">
            <div class="category-header">
              <h3 class="category-name">{category.header}</h3>
              <span class="category-meta">{category.years}</span>
            </div>

            <div class="skills-list">
              {category.items.map((skill) => (
                <div class={`skill-item ${interactive ? 'interactive' : ''}`}>
                  <div class="skill-info">
                    <div class="skill-name">{skill.name}</div>
                    <div class="skill-details">
                      <span class="skill-meta">
                        {skill.years} â€¢ {skill.projects}
                      </span>
                      <span class="skill-highlight">{skill.highlight}</span>
                    </div>
                  </div>

                  {showProgressBars && (
                    <div class="skill-progress">
                      <span class="skill-level">{skill.level}</span>
                      <code
                        class="skill-bar"
                        set:html={getSkillBarStyle(skill.level).html}
                      />
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    ) : (
      <div class="skills-error">
        <span class="error-message">! No skills data available</span>
        <span class="error-details">Skills data not provided</span>
      </div>
    )
  }
</div>

<style>
  .skills-container {
    background: transparent;
    border: none;
    padding: 0;
    font-family: 'JetBrains Mono', 'Fira Code', monospace;
    font-size: 13px;
    line-height: 1.5;
  }

  .skills-header {
    margin-bottom: 20px;
    padding-bottom: 12px;
    border-bottom: 1px solid var(--border-digital);
  }

  .command-prompt {
    color: var(--foreground-digital);
    font-weight: bold;
  }

  .skills-grid {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 40px 80px;
    align-items: start;
  }

  .category-section {
    display: flex;
    flex-direction: column;
    gap: 16px;
    min-width: 0;
  }

  .category-header {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    padding-bottom: 8px;
    border-bottom: 1px solid var(--border-digital);
  }

  .category-name {
    color: var(--foreground-digital);
    font-size: 14px;
    font-weight: bold;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .category-meta {
    color: var(--muted-digital);
    font-size: 11px;
    font-weight: normal;
  }

  .skills-list {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .skill-item {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    gap: 12px;
    padding: 10px 0;
    transition: all 0.2s ease;
    cursor: pointer;
    width: 100%;
  }

  .skill-item.interactive:hover {
    background: rgba(0, 255, 65, 0.05);
    transform: translateX(4px);
  }

  .skill-info {
    display: flex;
    flex-direction: column;
    gap: 4px;
    min-width: 0;
    flex: 1;
  }

  .skill-name {
    color: var(--foreground-digital);
    font-weight: 500;
    font-size: 13px;
  }

  .skill-details {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }

  .skill-meta {
    color: var(--muted-digital);
    font-size: 10px;
  }

  .skill-highlight {
    color: var(--muted-digital);
    font-size: 9px;
    font-style: italic;
    opacity: 0.8;
  }

  .skill-progress {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    gap: 8px;
    flex-shrink: 0;
  }

  .skill-level {
    color: var(--muted-digital);
    font-size: 11px;
    white-space: nowrap;
  }

  .skill-bar {
    font-family: 'JetBrains Mono', 'Fira Code', 'SF Mono', 'Monaco', 'Cascadia Code', monospace;
    background: rgba(0, 0, 0, 0.1);
    border: 1px solid var(--border-digital);
    border-radius: 4px;
    padding: 2px 6px;
    font-size: 12px;
    font-weight: 500;
    letter-spacing: -0.5px;
    white-space: nowrap;
    color: var(--foreground-digital);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  /* Code-like styling for different block types */
  .skill-bar .filled {
    color: #00ff41;
    text-shadow: 0 0 2px rgba(0, 255, 65, 0.3);
    font-weight: 600;
  }

  .skill-bar .dither-1 {
    color: #ffff00;
    text-shadow: 0 0 2px rgba(255, 255, 0, 0.2);
    font-weight: 500;
  }

  .skill-bar .dither-2 {
    color: #ff8c00;
    text-shadow: 0 0 2px rgba(255, 140, 0, 0.2);
    font-weight: 400;
  }

  .skill-bar .dither-3 {
    color: #666;
    font-weight: 300;
  }

  /* Print Mode Styles - Strict Black and White */
  body.print-view .skills-container {
    background: white !important;
    color: black !important;
  }

  body.print-view .skills-header {
    border-bottom-color: black !important;
  }

  body.print-view .command-prompt,
  body.print-view .category-name,
  body.print-view .skill-name {
    color: black !important;
  }

  body.print-view .category-header {
    border-bottom-color: black !important;
  }

  body.print-view .skill-bar {
    background: white !important;
    border: 1px solid black !important;
    box-shadow: none !important;
    color: black !important;
  }

  body.print-view .skill-bar .filled {
    color: black !important;
    text-shadow: none !important;
    font-weight: 700 !important;
  }

  body.print-view .skill-bar .dither-1 {
    color: black !important;
    text-shadow: none !important;
    font-weight: 600 !important;
  }

  body.print-view .skill-bar .dither-2 {
    color: black !important;
    text-shadow: none !important;
    font-weight: 500 !important;
  }

  body.print-view .skill-bar .dither-3 {
    color: black !important;
    text-shadow: none !important;
    font-weight: 400 !important;
  }

  body.print-view .category-meta,
  body.print-view .skill-level,
  body.print-view .skill-meta,
  body.print-view .skill-highlight {
    color: black !important;
  }

  body.print-view .skill-item {
    background: white !important;
  }

  body.print-view .skill-item:hover {
    background: white !important;
    transform: none !important;
  }

  /* Error handling styles */
  .skills-error {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    padding: 40px 20px;
    text-align: center;
    border: 1px dashed var(--border-digital);
    background: rgba(255, 68, 68, 0.05);
  }

  .error-message {
    color: var(--color-error);
    font-weight: bold;
    font-size: 14px;
  }

  .error-details {
    color: var(--muted-digital);
    font-size: 11px;
    opacity: 0.8;
  }

  body.print-view .skills-error {
    border-color: var(--border-print);
    background: transparent;
  }

  body.print-view .error-message {
    color: var(--foreground-print) !important;
  }

  body.print-view .error-details {
    color: var(--muted-print) !important;
  }

  /* Variant-specific styles */
  .skills-list {
    variant: 'list';
  }

  .skills-container.skills-grid {
    grid-template-columns: 1fr;
    gap: 20px;
  }

  .skills-container.skills-compact .skills-grid {
    gap: 16px;
  }

  .skills-container.skills-compact .skill-item {
    padding: 6px 0;
    gap: 16px;
  }

  .skills-container.skills-compact .category-name {
    font-size: 13px;
  }

  .skills-container.skills-compact .skill-name {
    font-size: 12px;
  }

  /* Enhanced Responsive Design */
  @media (max-width: 1024px) {
    .skills-grid {
      gap: 30px 60px;
    }
  }

  @media (max-width: 768px) {
    .skills-container {
      font-size: 12px;
    }

    .skills-grid {
      grid-template-columns: 1fr;
      gap: 24px;
    }

    .skill-item {
      gap: 16px;
      padding: 8px 0;
    }

    .skill-meta,
    .skill-highlight {
      font-size: 9px;
    }

    .skill-bar {
      font-size: 11px;
      padding: 3px 8px;
    }
  }

  @media (max-width: 480px) {
    .skills-container {
      font-size: 11px;
    }

    .category-name {
      font-size: 13px;
    }

    .skill-name {
      font-size: 12px;
    }

    .skill-item {
      padding: 6px 0;
      gap: 12px;
    }

    .skill-progress {
      gap: 6px;
    }

    .skill-bar {
      font-size: 10px;
      padding: 2px 6px;
    }
  }

  @media (max-width: 360px) {
    .skills-container {
      font-size: 10px;
    }

    .category-name {
      font-size: 12px;
    }

    .skill-name {
      font-size: 11px;
    }

    .skill-item {
      flex-direction: column;
      gap: 8px;
      align-items: flex-start;
    }

    .skill-progress {
      align-self: stretch;
      grid-template-columns: 1fr auto;
      gap: 8px;
    }

    .skill-level {
      order: 2;
      font-size: 10px;
    }

    .skill-bar {
      order: 1;
      font-size: 9px;
    }
  }

  /* Touch device optimizations */
  @media (hover: none) {
    .skill-item.interactive {
      cursor: default;
    }

    .skill-item.interactive:active {
      background: rgba(0, 255, 65, 0.1);
      transform: translateX(2px);
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .skill-bar {
      border-width: 2px;
      font-weight: var(--font-weight-bold);
    }
    
    .skill-bar .filled {
      font-weight: 800;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .skill-item {
      transition: none;
    }
    
    .skill-item.interactive:hover,
    .skill-item.interactive:active {
      transform: none;
    }
  }
</style>
