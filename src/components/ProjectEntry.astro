---
import type { Project } from '@/types';
import ActionButtons from './ActionButtons.astro';
import GitHubStats from './GitHubStats.astro';
import MediaPreview from './MediaPreview.astro';

interface Props {
  project: Project;
}

const { project } = Astro.props as Props;
const metric =
  project.metrics?.scale ||
  project.metrics?.security ||
  project.metrics?.performance ||
  project.metrics?.innovation;
const metricLabel = project.metrics?.scale
  ? 'Users'
  : project.metrics?.security
    ? 'Security'
    : project.metrics?.performance
      ? 'Performance'
      : 'Innovation';
const meta = `${project.status} | ${metric}`;
---

<div class="entry project-card">
  <div class="entry-header">
    <span class="entry-title">[{project.id}] {project.name}</span>
    <span class="entry-meta">{meta}</span>
  </div>
  <p class="entry-description">{project.description}</p>
  <div class="entry-description comment" style="margin-top: 5px;">
    // Features: {project.features.join(', ')}
  </div>
  <div class="tech-stack">
    {project.stack.map((tech: string) => <span class="tech-tag">{tech}</span>)}
  </div>

  <!-- Action Buttons -->
  <ActionButtons
    demoUrl={project.demoUrl}
    githubUrl={project.githubUrl}
    showCaseStudy={true}
    variant="default"
  />

  <!-- GitHub Stats -->
  {project.githubUrl && (
    <GitHubStats
      repoUrl={project.githubUrl}
      enableRealTime={true}
      showLanguage={true}
    />
  )}
</div>

<style>
  .project-card {
    position: relative;
  }
</style>